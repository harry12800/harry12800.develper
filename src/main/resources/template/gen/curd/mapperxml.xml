<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>service</name>
	<filePath>src/main/resources/mybatis/</filePath>
	<fileName>${ClassName}Mapper.xml</fileName>
	<content><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${packageName}.${moduleName}.mapper.${ClassName}Mapper">
	<select id='findById' resultMap='${ClassName}'  parameterType='java.lang.String'>
		select  <#list table.fields as c><#if c_has_next>${c.dbName},</#if><#if !c_has_next>${c.dbName}</#if></#list> from ${table.dbName}  where id = ${"#"}{id}
	</select>
	<select id='findBySql' parameterType='java.lang.String'  resultMap='${ClassName}' >
		 ${"$"}{value}
	</select>
	<select id='findAll' resultMap='${ClassName}' >
		select <#list table.fields as c><#if c_has_next>${c.dbName},</#if><#if c_has_next>${c.dbName}</#if></#list> from ${table.dbName}
	</select>
	<insert id='save' parameterType='${packageName}.${moduleName}.entity.${ClassName}'>
		insert into ${table.dbName}(
		<#list table.fields as c> <#if c_has_next>${c.dbName},</#if> <#if !c_has_next>${c.dbName}</#if></#list>)
		values(<#list table.fields as c><#if c_has_next>${"#"}{${c.javaName}},</#if><#if !c_has_next>${"#"}{${c.javaName}}</#if>
		</#list>)
	</insert>
	<update id='update' parameterType='${packageName}.${moduleName}.entity.${ClassName}'>
		update ${table.dbName} set
		<#list table.fields as c>
		 <#if c_has_next>${c.dbName}=${"#"}{${c.javaName}},</#if>
		 <#if !c_has_next>${c.dbName}=${"#"}{${c.javaName}}</#if></#list>
		 where id=${"#"}{id}
	</update>
	<delete id='deleteByIds' parameterType='java.lang.String'>
		delete from ${table.dbName} where  ${"#"}{value}
	</delete>
	<resultMap type='${packageName}.${moduleName}.entity.${ClassName}' id='${ClassName}'>
		<#list table.fields as c>
			<result property='${c.javaName}' column='${c.dbName}'/>
		</#list>
	</resultMap>
</mapper>]]>
	</content>
</template>